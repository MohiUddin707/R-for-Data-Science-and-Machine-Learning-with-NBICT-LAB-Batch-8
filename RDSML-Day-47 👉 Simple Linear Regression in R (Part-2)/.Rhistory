3+4
Individual_of_rock_pegions
Data = data.frame(sites = (Kushtia,Poradah, Ishwardi), rock-pegions= c(105,80,205))
Data = data.frame(sites = ("kushtia","Poradah","Ishardi"), rock-pegions= c(105,80,205))
Data = data.frame(sites = ("kushtia","Poradah","Ishardi"), rock-pegions= c(105,80,205))
Data = data.frame(sites = c("kushtia","Poradah","Ishardi"), rock-pegions= c(105,80,205))
Data = data.frame(sites = c("kushtia","Poradah","Ishardi"), rock-pegions = c(105,80,205))
df = data.frame(dose=c("Do.5","D0.1","D0,2"),len =c(42,10,20))
Data = data.frame(sites=c("kushtia","Poradah","Ishardi"), rock-pegions = c(105,80,205))
Data = data.frame(sites=c("kushtia","Poradah","Ishardi"), rock_pegions = c(105,80,205))
View(Data)
Data = data.frame(sites=c("kushtia","Poradah","Ishardi"), rock_pegions = c(105,80,205))
library(ggplot2)
ggplot(Data,aes(x=sites,y=rock_pegions))
ggplot(Data,aes(x=sites,y=rock_pegions))+
ggplot(Data,aes(x=sites,y=rock_pegions))+
geom_point()
ggplot(Data,aes(x=sites,y=rock_pegions))+
geom_point()
Data = data.frame(sites=c("kushtia","Poradah","Ishardi"), rock_pegions = c(105,80,205))
library(ggplot2)
ggplot(Data,aes(x=sites,y=rock_pegions))+
geom_point()
#Importing the dataset
dataset = read.csv("data.csv")
#Importing the dataset
dataset = read.csv("data.csv")
setwd("C:/Users/User/Desktop/Mohi Uddin/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-47 ðŸ‘‰ Simple Linear Regression in R (Part-2)")
# Importing the dataset
dataset <- read.csv("Salary_Data.csv")
# Splitting the dataset into the training set and test set
# install.packages("caTools")
library(caTools)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
# Fitting the Simple Linear Regression model to the training set
regressor <- lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
View(test_set)
View(test_set)
View(training_set)
View(dataset)
#checking the summary of the model
summary(regressor)
#Predicting the test set
library("predict")
predict(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
#visualize
library(ggplot2)
ggplot()+
geom_point(aes(z = training_set$YearsExperience, y= training_set$Salary))
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary))
geom_point(aes(x = training_set$YearsExperience, y= training_set$Sala),colour = "red"
ggplot()+
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Sala)
colour = "red")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Sala),
colour = "red")
geom_point(aes(x = training_set$YearsExperience, y= y_pred),
colour = "red")
geom_point(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")
geom_point(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")+
geom_point(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")+
geom_point(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")+
geom_line(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")+
geom_line(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y= training_set$Salary),
colour = "red")+
geom_line(aes(x = training_set$YearsExperience, y= y_pred),
colour = "blue")
